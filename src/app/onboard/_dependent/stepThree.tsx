'use client'

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/tXmzhc69LEs
 */

import { useState } from "react"
import { useFormState } from "react-dom"
import { useSearchParams } from "next/navigation"

// components
import { Input } from "~/components/ui/input"
import { Button } from "~/components/ui/button"
import type { SelectDependents } from "~/server/db/schema"
import { SubmitButton } from "~/components/ui/submitButton"
import { stepThreeSubmit } from "./actions"

const initialState = {
  status: "",
  message: "",
}
export function StepThree({ id, userId, customerId, ...mainDependent }: SelectDependents & { userId: number, customerId: string }) {
  const [state, formAction] = useFormState(stepThreeSubmit, initialState)
  const [members, setMembers] = useState<string[]>([String(id)])
  const searchParams = useSearchParams()
  const price = searchParams.get("price")

  const mainDependentProps = {
    fullName: {
      defaultValue: mainDependent.fullName!,
    },
    phone: {
      defaultValue: mainDependent.phone!.slice(2), // removes +1
    },
    email: {
      value: mainDependent.email!,
      disabled: true,
    },
  }

  return (
    <div className="flex flex-col min-h-screen bg-[#e0f0e9] items-center justify-center p-4 lg:p-32">
      <h1 className="absolute top-4 left-6 text-4xl font-bold text-[#006a4e]">CaredFor</h1>
      
      <form className="max-w-5xl w-full grid grid-cols-1 lg:grid-cols-2 gap-16 p-6" action={formAction} >
        <input name="dependentId" type="hidden" value={id} />
        <input name="userId" type="hidden" value={userId} />
        <input name="customerId" type="hidden" value={customerId} />
        <input name="length" type="hidden" value={members.length} />
        <input name="price" type="hidden" value={price ?? ""} />

        <div className="flex flex-col min-h-[400px] space-y-6 justify-between">
          <div className="gap-y-2">
            <h1 className="text-4xl font-bold text-[#155724]">
              Let&apos;s setup the people in your Care Circle
            </h1>

            <p className="text-md text-[#155724] opacity-50">
              the Care Circle will be the people who will be contacted if a check-in is missed 4 times in a row
            </p>
          </div>
          
          <div className="flex flex-col space-y-12">
            {members.map((id, i) => (
              <div className="flex flex-col space-y-4" key={id}>

                <div className="flex items-center justify-between h-10">
                  <h1 className="text-2xl font-bold text-[#155724]">
                    Care Member #{i + 1}
                  </h1>
                  
                  {i !== 0 && (
                    <Button 
                      className="bg-[#006a4e] text-white hover:bg-[#00563f]" 
                      type="button"
                      onClick={() => setMembers(prev => prev.filter((_id) => id !== _id))}
                    >
                      Remove
                    </Button>
                  )}
                </div>

                <div className="flex flex-col gap-y-1">
                  <label className="block text-lg font-medium text-[#155724]" htmlFor={`fullName-${i}`}>
                    Full Name
                  </label>
                  <Input
                    className="border border-[#c3e6cb] bg-white"
                    id={`fullName-${i}`}
                    name={`fullName-${i}`}
                    placeholder="John Doe"
                    required
                    {...(i === 0 ? mainDependentProps.fullName : {})}
                  />
                </div>

                <div className="flex flex-col gap-y-1">
                  <label className="block text-lg font-medium text-[#155724]" htmlFor={`email-${i}`}>
                    Email
                  </label>
                  <Input
                    className="border border-[#c3e6cb] bg-white"
                    id={`email-${i}`}
                    name={`email-${i}`}
                    required
                    {...(i === 0 ? mainDependentProps.email : {})}
                  />
                </div>
                
                <div className="flex flex-col gap-y-1">
                  <label className="block text-lg font-medium text-[#155724]" htmlFor={`phone-${i}`}>
                    Phone
                  </label>

                  <div className="flex">
                    <div className="rounded-l-lg bg-slate-50 grid place-items-center px-6 border border-[#c3e6cb] text-slate-500">
                      +1
                    </div>

                    <Input
                      className="block rounded-l-none border border-[#c3e6cb] bg-white dark:border-slate-800"
                      id={`phone-${i}`}
                      name={`phone-${i}`}
                      maxLength={10}
                      placeholder="Phone number"
                      required
                      {...(i === 0 ? mainDependentProps.phone : {})}
                    />
                  </div>
                </div>
                
                {i === members.length - 1 && members.length !== 8 && (
                  <Button
                    className="bg-[#006a4e] self-start text-white hover:bg-[#00563f]"
                    type="button"
                    onClick={() => setMembers(prev => [...prev, crypto.randomUUID()])}
                  >
                    Add Care Member
                  </Button>
                )}
              </div>
            ))}

            <SubmitButton
              size="lg"
              className="bg-[#006a4e] text-md text-white hover:bg-[#00563f]"
            >
              Finish
            </SubmitButton>
            {state.status === "ERROR" && (
              <p className="text-red-500 text-center">{state.message}</p>
            )}
          </div>
        </div>

        {/*https://consensus.app/papers/health-risk-appraisal-people-people-living-alone-group-kharicha/32233f7a2ea25be5bf8e53fce33e3a6b/*/}
        <div className="space-y-6 hidden lg:block">
          <div className="p-6 border border-[#c3e6cb] bg-white rounded-md dark:border-slate-800">
            <p className="text-lg text-[#155724]">
              According to this <a className="text-[#67CCA0]" href="https://pubmed.ncbi.nlm.nih.gov/17394729/" target="_blank">cited paper</a> People
              living alone in the later stages of their life are at a higher risk
              of health issues

              <br/><br/>

              With CaredFor, you can have peace of mind knowing that the check-in is there,
              one call at a time
            </p>
          </div>
        </div>

      </form>
    </div>
  )
}
